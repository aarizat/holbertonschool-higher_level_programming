Import module
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Tests cases:

T1-- correct parameters
>>> bg = BaseGeometry()
>>> bg.integer_validator("width", 89)

T2-- Both strings
>>> bg.integer_validator("width", "width")
Traceback (most recent call last):
...
TypeError: width must be an integer

T3-- Argument zero
>>> bg.integer_validator("width", 0)
Traceback (most recent call last):
...
ValueError: width must be greater than 0

T4-- without arguments.
>>> bg.integer_validator()
Traceback (most recent call last):
...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

T5-- negative argument.
>>> bg.integer_validator("width", -5)
Traceback (most recent call last):
...
ValueError: width must be greater than 0

>>> bg.integer_validator("width", (4,))
Traceback (most recent call last):
...
TypeError: width must be an integer

>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented

>>> bg.integer_validator("width", {1, 2})
Traceback (most recent call last):
...
TypeError: width must be an integer

>>> bg.integer_validator("width", None)
Traceback (most recent call last):
 ...
TypeError: width must be an integer

>>> bg.integer_validator("width", [1, 2])
Traceback (most recent call last):
...
TypeError: width must be an integer

>>> bg.integer_validator("width", 8.5)
Traceback (most recent call last):
...
TypeError: width must be an integer

>>> bg.integer_validator("width")
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator("width", 34, 45)
Traceback (most recent call last):
TypeError: integer_validator() takes 3 positional arguments but 4 were given
